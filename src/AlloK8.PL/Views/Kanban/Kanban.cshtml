@model KanbanVM

@{
    Layout = "_Layout";
}

<div class="content-wrapper">
    <div class="row d-flex justify-content-between align-items-center">
        <h3 class="mb-4 ml-3">@Model.ProjectName @T.KanbanBoardTitleText</h3>
        <div class="d-flex align-items-center mr-3 mb-4">
            <a class="btn btn-primary mr-3" type="button" id="labelsButton" href="/projects/@Model.ProjectId/labels">
                @T.LabelsViewTitle
            </a>
            <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle" type="button" id="filterDropdownButton"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @T.FilterDropdownText
                </button>
                <div class="dropdown-menu p-2" aria-labelledby="filterDropdownButton">
                    <div class="d-flex justify-content-between align-items-center px-2 py-1">
                        <span>@T.SortByPriorityButtonText</span>
                        <input type="checkbox" id="priorityCheckbox" onchange="togglePrioritySort(this)">
                    </div>
                    <div class="d-flex justify-content-between align-items-center px-2 py-1">
                        <span>@T.OnlyMineButtonText</span>
                        <input type="checkbox" id="onlyMineCheckbox" onchange="toggleOnlyMine(this)">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row d-flex justify-content-between">
        <div class="col-md-4">
            <div class="card" id="todo-card">
                <div class="card-body mx-2 my-2">
                    <h4 class="card-title">@T.ToDoColumnLabel</h4>
                    <ul class="list-group task-list" id="todo" ondrop="drop(event)" ondragover="allowDrop(event)">
                        @foreach (var task in Model.TasksByColumn.GetValueOrDefault(1, new List<TaskKanbanVM>()))
                        {
                        <li id="task-@task.Id" class="list-group-item draggable d-flex align-items-center @(task.IsPriority ? "priority-task" : "")"
                            draggable="true" ondragstart="drag(event)" onclick="openTaskModal(this)">
                            <p>@task.Title</p>
                            <button class="btn btn-icon bg-transparent text-danger ml-auto"
                                    onclick="handleRemoveClick(event, this)">
                                <i class="remove ti-close"></i>
                            </button>
                        </li>
                        }
                    </ul>
                    <div class="input-group mt-3">
                        <input maxlength="30" type="text" id="newTaskTodo" class="form-control" placeholder="@T.AddNewTaskInputLabel">
                        <button class="btn btn-icon bg-transparent text-primary" onclick="addTask('todo')">
                            <i class="icon-circle-plus"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card" id="doing-card">
                <div class="card-body mx-2 my-2">
                    <h4 class="card-title">@T.DoingColumnLabel</h4>
                    <ul class="list-group task-list" id="doing" ondrop="drop(event)" ondragover="allowDrop(event)">
                        @foreach (var task in Model.TasksByColumn.GetValueOrDefault(2, new List<TaskKanbanVM>()))
                        {
                        <li id="task-@task.Id" class="list-group-item draggable d-flex align-items-center @(task.IsPriority ? "priority-task" : "")"
                            draggable="true" ondragstart="drag(event)" onclick="openTaskModal(this)">
                            <p>@task.Title</p>
                            <button class="btn btn-icon bg-transparent text-danger ml-auto"
                                    onclick="handleRemoveClick(event, this)">
                                <i class="remove ti-close"></i>
                            </button>
                        </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card" id="done-card">
                <div class="card-body mx-2 my-2">
                    <h4 class="card-title">@T.DoneColumnLabel</h4>
                    <ul class="list-group task-list" id="done" ondrop="drop(event)" ondragover="allowDrop(event)">
                        @foreach (var task in Model.TasksByColumn.GetValueOrDefault(3, new List<TaskKanbanVM>()))
                        {
                        <li id="task-@task.Id" class="list-group-item draggable d-flex align-items-center @(task.IsPriority ? "priority-task" : "")"
                            draggable="true" ondragstart="drag(event)" onclick="openTaskModal(this)">
                            <p>@task.Title</p>
                            <button class="btn btn-icon bg-transparent text-danger ml-auto"
                                    onclick="handleRemoveClick(event, this)">
                                <i class="remove ti-close"></i>
                            </button>
                        </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
    @await Html.PartialAsync("_EditTaskModal", new TaskUpdateVM())
    @await Html.PartialAsync("_DeleteTaskModal")
</div>

@section Scripts
{
    <script type="application/javascript">
        window['project_id'] = @Model.ProjectId;
    </script>
    <script src="~/js/modules/kanban.js"></script>
    <script src="~/js/modules/edit-task-modal.js"></script>
}

<style>
    .task-list {
        min-height: 200px;
        border: 1px dashed #ccc;
        padding: 10px;
        background-color: #f8f9fa;
    }

    .draggable {
        cursor: grab;
        margin: 5px;
    }

    .list-group-item {
        border: 1px solid rgba(0, 0, 0, 0.125) !important;
    }

    .list-group-item.priority-task {
        border-left: 4px solid #4B49AC !important;
    }

    #todo-card {
        border: 2px solid #f67268;
    }
    #doing-card {
        border: 2px solid #58b0f6;
    }
    #done-card {
        border: 2px solid #4cb050;
    }

    /* Animation for task movement success */
    .move-success {
        background-color: rgba(75, 192, 192, 0.2);
        transition: background-color 0.5s;
    }

    /* Animation for task addition */
    .task-added {
        opacity: 0;
        animation: taskFadeIn 0.5s forwards;
    }

    @@-webkit-keyframes taskFadeIn {
         from { opacity: 0; }
         to { opacity: 1; }
     }

    @@keyframes taskFadeIn {
         from { opacity: 0; }
         to { opacity: 1; }
     }

    .notification {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1050;
        min-width: 250px;
        padding: 15px;
        border-radius: 4px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: opacity 0.3s;
    }
</style>