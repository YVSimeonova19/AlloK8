@* _DeleteLabelModal.cshtml *@

<div class="modal fade" id="labelDeleteModal" tabindex="-1" role="dialog"
     aria-labelledby="labelDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="labelDeleteModalLabel">@T.DeleteLabelModalTitle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>@T.DeleteLabelModalText</p>
                <div class="alert alert-danger d-none" id="deleteLabelErrorMessage" role="alert">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@T.CancelButtonText</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteLabel">@T.DeleteModalButtonText</button>
            </div>
        </div>
    </div>
</div>

<div id="labelSuccessNotification" class="position-fixed text-center alert alert-success"
     style="top: 80px; left: 50%; transform: translateX(-50%); z-index: 9999; display: none;">
    @T.LabelSuccessfullyDeletedPopupText
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Delete confirmation handler
        document.getElementById("confirmDeleteLabel").addEventListener("click", function () {
            const modal = document.getElementById("labelDeleteModal");
            const labelId = modal.getAttribute("data-label-id");
            const errorMessageContainer = document.getElementById("deleteLabelErrorMessage");

            if (!labelId) {
                console.log("Label ID not set.");
                return;
            }

            fetch(`/labels/${labelId}/delete`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Failed to delete label.");
                    }
                    return Promise.resolve({});
                })
                .then(() => {
                    // Hide the modal
                    $('#labelDeleteModal').modal('hide');

                    // Remove the label row from the view
                    const tr = document.querySelector(`tr:has(button[onclick*="openDeleteModal(${labelId})"])`);
                    if (tr) {
                        tr.remove();

                        // Update the label count
                        const countElement = document.querySelector('.card-header .d-flex span');
                        if (countElement) {
                            const currentCount = parseInt(countElement.textContent);
                            if (!isNaN(currentCount)) {
                                const newCount = currentCount - 1;
                                countElement.textContent = `${newCount} @Html.Raw(@T.LabelsWordText)`;
                            }
                        }
                    } else {
                        // If we can't find the element, refresh the page
                        window.location.reload();
                    }

                    // Show success notification
                    const successNotification = document.getElementById("labelSuccessNotification");
                    successNotification.style.display = "block";

                    // Auto-hide notification after 3 seconds
                    setTimeout(() => {
                        successNotification.style.display = "none";
                    }, 3000);
                })
                .catch(error => {
                    console.error("Error:", error);
                    // Display error message in the modal
                    errorMessageContainer.textContent = "@Html.Raw(@T.FailedToDeleteLabelErrorMessage)";
                    errorMessageContainer.classList.remove("d-none");
                });
        });
    });
    
    // Clear any previous error messages
    const errorMessageContainer = document.getElementById("deleteLabelErrorMessage");
    errorMessageContainer.textContent = "";
    errorMessageContainer.classList.add("d-none");
</script>