<div class="modal fade" id="projectDeleteModal" tabindex="-1" role="dialog"
     aria-labelledby="projectDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="projectDeleteModalLabel">@T.DeleteProjectModalTitle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>@T.DeleteProjectModalText</p>
                <div class="alert alert-danger d-none" id="deleteErrorMessage" role="alert">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@T.CancelButtonText</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteProject">@T.DeleteModalButtonText</button>
            </div>
        </div>
    </div>
</div>

<div id="successNotification" class="position-fixed text-center alert alert-success"
     style="top: 80px; left: 50%; transform: translateX(-50%); z-index: 9999; display: none;">
    @T.ProjectSuccessfullyDeletedPopupText
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Delete confirmation handler
        document.getElementById("confirmDeleteProject").addEventListener("click", function () {
            const modal = document.getElementById("projectDeleteModal");
            const projectId = modal.getAttribute("data-project-id");
            const errorMessageContainer = document.getElementById("deleteErrorMessage");

            if (!projectId) {
                console.log("Project ID not set.");
                return;
            }

            fetch(`/projects/${projectId}/delete`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Failed to delete project.");
                    }
                    return Promise.resolve({});
                })
                .then(() => {
                    // Hide the modal
                    $('#projectDeleteModal').modal('hide');

                    // Remove the project card from the view
                    const projectCard = document.querySelector(`.project-title[data-project-id="${projectId}"]`).closest('.col-md-4');
                    projectCard.remove();

                    // Show success notification
                    const successNotification = document.getElementById("successNotification");
                    successNotification.style.display = "block";

                    // Auto-hide notification after 3 seconds
                    setTimeout(() => {
                        successNotification.style.display = "none";
                    }, 3000);
                })
                .catch(error => {
                    console.error("Error:", error);
                    // Display error message in the modal
                    errorMessageContainer.textContent = "@Html.Raw(@T.FailedToDeleteProjectErrorMessage)";
                    errorMessageContainer.classList.remove("d-none");
                });
        });
    });

    function openDeleteModal(element) {
        const projectId = element.closest('.card').querySelector('.project-title').dataset.projectId;
        const modal = document.getElementById('projectDeleteModal');
        modal.setAttribute('data-project-id', projectId);

        // Clear any previous error messages
        const errorMessageContainer = document.getElementById("deleteErrorMessage");
        errorMessageContainer.textContent = "";
        errorMessageContainer.classList.add("d-none");

        $('#projectDeleteModal').modal('show');
    }
</script>